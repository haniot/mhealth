openapi: 3.0.0
info:
  description: This is the RESTFul API documentation of the microservice for data acquisition.
  version: "1.0.0"
  title: Data Acquisition Service
  contact:
    email: haniot@nutes.uepb.edu.br
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/haniot/haniot-data-acquisition/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/nutes.haniot/data-acquisition/1.0.0
  - description: Local Host
    url: http://localhost
tags:
  - name: devices
    description: Operations for Device resource.
  - name: measurements
    description: Operations for Measurement resource.
  - name: users.measurements
    description: Operations for User Measurements resource.
  - name: users.devices
    description: Operations for User Devices resource.
paths:
  # devices
  /devices:
    get:
      tags:
        - devices
      summary: Recovers devices of the plataform.
      operationId: getAllDevicesFromPlataform
      description: Returns list with devices supported by the plataform. This is a open route. The query supports Field Selection, Paging and Sorting.
      parameters:
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      readOnly: true
                      type: string
                      format: uuid
                      description: Automatically generated key field.
                      example: '5c86a3d0ea81413b822c700d'
                    name:
                      type: string
                      description: Device name identification field, according to factory default.
                      example: YUNMAI SCALE
                    type:
                      type: number
                      description: |
                        Integer number representing the type of device, according with internal patterns.

                        Example of device types:

                        - 1 -> THERMOMETER
                        - 2 -> GLUCOMETER
                        - 3 -> BODY_COMPOSITION
                        - 4 -> BLOOD_PRESSURE
                        - 5 -> HEART_RATE
                        - 6 -> SMARTWATCH
                        - 7 -> SMARTBAND
                      example: 3
                    model_number:
                      type: number
                      description: Number of device model.
                      example: 5028
                    manufacturer:
                      type: string
                      description: Identification field from device manufacturer.
                      example: XIAOMI
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  # measurements
  /measurements:
    get:
      tags:
        - measurements
      summary: Recover all measurements.
      operationId: getAllMeasurements
      description: Returns list with all measurements. The query supports Field Selection, Paging and Sorting.
      parameters:
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Measurement'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get measurements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  # users.measurements
  /users/{user_id}/measurements:
    post:
      tags:
        - users.measurements
      summary: Register measurement.
      operationId: saveMeasurementFromUser
      description: Register a new measurement and associate it to a user.
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of User.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
      responses:
        '201':
          description: Measureement saved sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register measurements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        description: Measurement to be insert
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurement'
    get:
      tags:
        - users.measurements
      summary: Recovers measurements of the user.
      operationId: getAllMeasurementsOfUser
      description: Returns list with measurements associated with an user. The query supports Field Selection, Paging and Sorting.
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of User.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Measurement'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get measurements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{user_id}/measurements/{measurement_id}:
    get:
      tags:
        - users.measurements
      summary: Recover a  measurement of the user.
      operationId: getMeasurementOfUser
      description: Returns a unique measurement associated with an user. The query supports Field Selection.
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of User.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
        - in: path
          name: measurement_id
          required: true
          description: Id of Measurement.
          example: 5a62be07de34500146d9c624
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get measurements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - users.measurements
      summary: Update measurement data.
      description: Update the measurement data.
      operationId: updateMeasurementOfUser
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of User.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
        - in: path
          name: measurement_id
          required: true
          description: Id of Measurement.
          example: 5a62be07de34500146d9c624
          schema:
            type: string
      responses:
        '200':
          description: Updated measurement data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update measurement data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurement'
        description: Data of the measurement to be updated.
        required: true
    delete:
      tags:
        - users.measurements
      summary: Delete measurement data.
      description: Delete the measurement data.
      operationId: deleteMeasurementFromUser
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of User.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
        - in: path
          name: measurement_id
          required: true
          description: Id of Measurement.
          example: 5a62be07de34500146d9c624
          schema:
            type: string
      responses:
        '204':
          description: Operation performed successfully. There is no data to be returned.
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete measurements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # users.devices
  /users/{user_id}/devices:
    post:
      tags:
        - users.devices
      summary: Register device.
      operationId: saveDeviceFromUser
      description: Register a new device and associate it to a user.
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of User.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
      responses:
        '201':
          description: Device saved sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        description: Device to be insert
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
    get:
      tags:
        - users.devices
      summary: Recovers devices of the user.
      operationId: getAllDevicesOfUser
      description: Returns list with devices associated with an user. The query supports Field Selection, Paging and Sorting.
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of User.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{user_id}/devices/{device_id}:
    get:
      tags:
        - users.devices
      summary: Recover a  device of the user.
      operationId: getDeviceOfUser
      description: Returns a unique device associated with an user. The query supports Field Selection.
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of User.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
        - in: path
          name: device_id
          required: true
          description: Id of device.
          example: 5c86a3d0ea81413b822c700d
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - users.devices
      summary: Update device data.
      description: Update the device data.
      operationId: updateDeviceOfUser
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of User.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
        - in: path
          name: device_id
          required: true
          description: Id of Device.
          example: 5c86a3d0ea81413b822c700d
          schema:
            type: string
      responses:
        '200':
          description: Updated device data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update device data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
        description: Data of the measurement to be updated.
        required: true
    delete:
      tags:
        - users.devices
      summary: Delete device data.
      description: Delete the device data.
      operationId: deleteDeviceFromUser
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of User.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
        - in: path
          name: device_id
          required: true
          description: Id of Device.
          example: 5c86a3d0ea81413b822c700d
          schema:
            type: string
      responses:
        '204':
          description: Operation performed successfully. There is no data to be returned.
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    # Measurement Schema
    Measurement:
      type: object
      required:
        - id
        - value
        - unit
        - type
        - user_id
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5a62be07de34500146d9c624'
        value:
          type: number
          description: Value of measurement.
          example: 50
        unit:
          type: string
          description: Unit of measurement, according with the International System of Units (SI).
          example: 'kg'
        type:
          type: string
          description: Type of measurement, according with internal pattern.
          enum: ['temperature', 'blood_glucose', 'body_mass', 'body_fat', 'blood_pressure_systolic', 'blood_pressure_diastolic', 'heart_rate', 'bmi', 'rmr', 'bmr', 'muscle_mass', 'visceral_fat', 'body_age', 'steps', 'distance', 'calories_burned']
        measurements:
          type: array
          description: List of measurements associated with the measurement.
          items:
            type: object
        contexts:
          type: array
          description: List of contexts referred to the measurement.
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of context.
                enum: ['glucose_carbohydrate', 'glucose_meal', 'glucose_location', 'glucose_type', 'temperature_type']
              value:
                type: number
                description: Number of context.
                example: 3
        timestamp:
          type: string
          description: Timestamp in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00Z'
        device_id:
          type: string
          format: uuid
          description: Device responsible for capturing the measurement.
          example: '5c868e372ff9c9e95b3c9a6d'
        user_id:
          type: string
          format: uuid
          description: Id of user associated with a measurement.
          example: '5a62be07d6f33400146c9b61'
    # Device Schema
    Device:
      type: object
      required:
        - id
        - name
        - address
        - type
        - manufacturer
        - user_id
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5c86a3d0ea81413b822c700d'
        name:
          type: string
          description: Device name identification field, according to factory default.
          example: YUNMAI SCALE
        address:
          type: string
          description: Unique combination of letters and numbers used to identify the device.
          example: 'D4:36:39:91:75:71'
        type:
          type: string
          description: |
            String representing the type of device, according with internal patterns.

            Example of device types:

            - THERMOMETER
            - GLUCOMETER
            - BODY_COMPOSITION
            - BLOOD_PRESSURE
            - HEART_RATE
            - SMARTWATCH
            - SMARTBAND
          enum: ['thermometer', 'glucometer', 'body_composition', 'blood_pressure', 'heart_rate', 'smartwatch', 'smartband']
        model_number:
          type: number
          description: Number of device model.
          example: 5028
        manufacturer:
          type: string
          description: Identification field from device manufacturer.
          example: XIAOMI
        user_id:
          type: string
          format: uuid
          readOnly: true
          description: Id of user associated with a device.
          example: '5a62be07d6f33400146c9b61'
    # Error Schema
    Error:
      type: object
      description: >-
        Default template for error message.
        All returned errors will follow this template.
      required:
        - code
        - message
        - description
      properties:
        code:
          type: integer
          description: >-
            Unique API code that indicates specific details of the error, or
            the actual status code of the response when the unique code is not
            appropriate.
        message:
          type: string
          description: Readable and short description of the error.
        description:
          type: string
          description: Detailed description of the error.

  parameters:
    fieldsParam:
      in: query
      name: fields
      required: false
      description: >-
        Allows you to retrieve only the information you want. To do this,
        simply provide the name of the attributes separated by commas.
        For example: **_fields=field1,field2_** indicates that only
        field1 and field2 should be listed in the query result. For
        access to the second level use the syntax fields=property.property1.
      schema:
        type: array
        items:
          type: string

    pageParam:
      in: query
      name: page
      required: false
      description: The page number.
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1

    limitParam:
      in: query
      name: limit
      required: false
      description: The number of items to return.
      schema:
        type: integer
        format: int32
        maximum: 100
        default: 20

    sortParam:
      in: query
      name: sort
      required: false
      description: >-
        Contains the names of the attributes, separated by commas, that
        will be used to sort the result of the query. For ascending sort,
        use the '+' character before the attribute name. For descending
        sort, use the '-' character before the attribute name. By default,
        the order is ascending, so the '+' symbol is optional, just enter
        the attribute.
      schema:
        type: array
        items:
          type: string

    filterParam:
      in: query
      name: 'filter'
      required: false
      description: |
        To filter a collection by multiple concurrent attributes or filter
        multiple values for an attribute, simply use the attribute/property
        name with an equal sign and the expected values. The query is not case sensitive.

        **Example**: **_?name=elvis,john_** to retrieve exactly the same users with
        elvis or john name.

        **Example**: **_?age=30&age=40_** to retrieve users with age equals 30 and
        users with age equals 40 years.

        For second-level filtering use the syntax property.property1=value1.

        For filtering with logical operators, just follow the syntax:
        **_property=operator:value_**. The available operators are:
         - **gt** -> Defines which value of the attribute is greater than
                    (that is,>) the specified value.
         - **gte** -> Defines which attribute value is greater than or equal to
                    (that is,>=) the specified value.
         - **lt** -> Define the value of the attribute to be less than (that is, <)
                    the specified value.
         - **lte** -> Defines which value of the attribute is less than or equal to
                    (that is, <=) the specified value.

        **Example**: **_?field1=gte:80&age=lt:100_** to recover the users with age
        is greater than or equal to 80 and less then 100.

        **Note**: The Swaggerhub does not support insert dynamic queries.
      schema:
        type: string

    dateStartParam:
      in: query
      name: date_start
      required: false
      description: >-
        Define start date in format: YYYY-MM-DD ou YYYY-MM-DD hh:mm:ss. The
        attribute used for the query will be the registration_date.
      schema:
        type: string

    dateEndParam:
      in: query
      name: date_end
      required: false
      description: >-
        Define end date in format: YYYY-MM-DD ou YYYY-MM-DD hh:mm:ss.The
        attribute used for the query will be the registration_date.
      schema:
        type: string
        default: today

    periodParam:
      in: query
      name: period
      required: false
      description: |-
        Sets the period from the available ones:
         - **[1..n]d** - Total days (1d, 2d, ...)
         - **[1..n]w** - Total of weeks (1w, 2w, ...)
         - **[1..n]m** - Total of months (1m, 2m, ...)
         - **[1..n]y** - Total of years (1y, 2y, ...)
        The attribute used for the query will be the registration_date.
      schema:
        type: string

    searchParam:
      name: 'search'
      schema: {}
      in: query
      required: false
      description: |
        A search is a sub-resource of a collection. As such, your results may have a
        different format from the collection itself. The sub-resource search works just
        like filtering and its syntax allows to make approximations. The string queries:
        partial responses, pagination, ordination, filtering e date, must be supported
        in the search. It is worth noting that not every resource should allow support
        to queries. The query is not case sensitive, and the available syntax may be:

        * property=value* - Search for data that begins with the value provided.

        * property=*value - Search for data that ends with the given value.

        * property=*value* - Search for data that contains the value provided in any position.
